10 REM Sprite Collision Demo with Rotation Effects
20 REM Pacman vs Ghosts with spinning animations
30 REM Screen resolution: 640x480 pixels
40 
50 REM Initialize graphics
60 CLS
70 
80 REM Create simple Pacman sprite data (yellow circle with mouth)
90 LET PACMAN$ = "0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,"
100 LET PACMAN$ = PACMAN$ + "0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,"
110 LET PACMAN$ = PACMAN$ + "0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,"
120 LET PACMAN$ = PACMAN$ + "0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,"
130 LET PACMAN$ = PACMAN$ + "0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,"
140 LET PACMAN$ = PACMAN$ + "0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,"
150 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,"
160 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,"
170 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
180 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
190 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
200 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
210 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
220 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
230 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
240 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
250 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,10,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
260 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
270 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
280 LET PACMAN$ = PACMAN$ + "10,10,10,10,10,10,10,10,10,10,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
290 LET PACMAN$ = PACMAN$ + "0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,"
300 LET PACMAN$ = PACMAN$ + "0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,"
310 LET PACMAN$ = PACMAN$ + "0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,"
320 LET PACMAN$ = PACMAN$ + "0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,"
330 LET PACMAN$ = PACMAN$ + "0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,"
340 LET PACMAN$ = PACMAN$ + "0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,"
350 FOR I = 1 TO 6
360   LET PACMAN$ = PACMAN$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
370   IF I < 6 THEN LET PACMAN$ = PACMAN$ + ","
380 NEXT I
390 
400 REM Create simple Ghost sprite data (white with eyes)
410 LET GHOST$ = "0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,"
420 LET GHOST$ = GHOST$ + "0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,"
430 LET GHOST$ = GHOST$ + "0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,"
440 LET GHOST$ = GHOST$ + "0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,"
450 LET GHOST$ = GHOST$ + "0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,"
460 LET GHOST$ = GHOST$ + "0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,"
470 LET GHOST$ = GHOST$ + "8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,"
480 LET GHOST$ = GHOST$ + "8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,"
490 LET GHOST$ = GHOST$ + "8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,"
500 LET GHOST$ = GHOST$ + "8,8,8,8,8,6,6,8,8,8,8,8,8,8,8,8,8,6,6,8,8,8,8,8,8,8,8,0,0,0,0,0,"
510 LET GHOST$ = GHOST$ + "8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,0,0,0,0,0,"
520 LET GHOST$ = GHOST$ + "8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,0,0,0,0,0,"
530 FOR I = 1 TO 16
540   LET GHOST$ = GHOST$ + "8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,"
550 NEXT I
560 LET GHOST$ = GHOST$ + "8,8,8,8,0,8,8,8,0,8,8,8,0,8,8,8,0,8,8,8,0,8,8,8,0,8,8,0,0,0,0,0,"
570 LET GHOST$ = GHOST$ + "8,8,8,0,0,8,8,0,0,8,8,0,0,8,8,0,0,8,8,0,0,8,8,0,0,8,8,0,0,0,0,0,"
580 LET GHOST$ = GHOST$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
590 LET GHOST$ = GHOST$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
600 
610 REM Create simple Dot sprite (small bright dot)
620 LET DOT$ = ""
630 FOR I = 1 TO 13
640   LET DOT$ = DOT$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
650 NEXT I
660 LET DOT$ = DOT$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
670 LET DOT$ = DOT$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
680 LET DOT$ = DOT$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
690 LET DOT$ = DOT$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
700 FOR I = 1 TO 15
710   LET DOT$ = DOT$ + "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
720   IF I < 15 THEN LET DOT$ = DOT$ + ","
730 NEXT I
740 
750 REM Define sprite definitions
760 SPRITE 1, PACMAN$
770 SPRITE 2, GHOST$ 
780 SPRITE 3, DOT$
790 
800 REM Create sprite instances
810 SPRITE UPDATE 10, 1, 320, 240, 0, 1
820 SPRITE UPDATE 11, 2, 100, 100, 0, 1
830 SPRITE UPDATE 12, 2, 540, 100, 0, 1
840 SPRITE UPDATE 13, 2, 100, 380, 0, 1
850 SPRITE UPDATE 14, 2, 540, 380, 0, 1
860 SPRITE UPDATE 15, 3, 200, 150, 0, 1
870 SPRITE UPDATE 16, 3, 440, 150, 0, 1
880 SPRITE UPDATE 17, 3, 200, 330, 0, 1
890 SPRITE UPDATE 18, 3, 440, 330, 0, 1
900 
901 REM Store dot positions in arrays. This is crucial to keep them "active"
902 REM for the collision system by updating them in every frame.
903 DIM DOT_X(3)
904 DIM DOT_Y(3)
905 LET DOT_X(0) = 200 : LET DOT_Y(0) = 150
906 LET DOT_X(1) = 440 : LET DOT_Y(1) = 150
907 LET DOT_X(2) = 200 : LET DOT_Y(2) = 330
908 LET DOT_X(3) = 440 : LET DOT_Y(3) = 330
909 
910 REM Initialize variables
920 LET P_X = 320
930 LET P_Y = 240
940 LET P_SPEED = 5
950 LET E2_X = 100
960 LET E2_Y = 100
970 LET E2_DX = 3
980 LET E2_DY = 2
990 LET E2_ROT = 0
1000 LET E3_X = 540
1010 LET E3_Y = 100
1020 LET E3_DX = -3
1030 LET E3_DY = 3
1040 LET E3_ROT = 0
1050 LET E4_X = 100
1060 LET E4_Y = 380
1070 LET E4_DX = 3
1080 LET E4_DY = -2
1090 LET E4_ROT = 0
1100 LET E5_X = 540
1110 LET E5_Y = 380
1120 LET E5_DX = -3
1130 LET E5_DY = -3
1140 LET E5_ROT = 0
1150 LET SCORE = 0
1160 LET LIVES = 3
1170 LET GAME_OVER = 0
1180 
1190 REM Display UI
1200 LOCATE 1, 1
1210 PRINT "PACMAN DEMO - Arrow Keys to move"
1220 LOCATE 2, 1
1230 PRINT "Spinning Ghosts! Collect Dots!"
1240 
1250 REM Main game loop
1260 LOCATE 4, 1
1261 
1262 REM Update dot positions every frame to keep them active for collision detection
1263 FOR I = 0 TO 3
1264 SPRITE UPDATE (15+I), 3, DOT_X(I), DOT_Y(I), 0, 1
1265 NEXT I
1266 
1270 PRINT "Score: "; SCORE; "  Lives: "; LIVES; "     "
1280 LET KEY$ = INKEY$
1290 IF KEY$ = KEYCURUP THEN LET P_Y = P_Y - P_SPEED
1300 IF KEY$ = KEYCURDOWN THEN LET P_Y = P_Y + P_SPEED
1310 IF KEY$ = KEYCURLEFT THEN LET P_X = P_X - P_SPEED
1320 IF KEY$ = KEYCURRIGHT THEN LET P_X = P_X + P_SPEED
1330 IF P_X < 32 THEN LET P_X = 32
1340 IF P_X > 608 THEN LET P_X = 608
1350 IF P_Y < 32 THEN LET P_Y = 32
1360 IF P_Y > 448 THEN LET P_Y = 448
1370 SPRITE UPDATE 10, 1, P_X, P_Y, 0, 1
1380 GOSUB 2000
1390 GOSUB 2200
1400 GOSUB 2400
1410 GOSUB 2600
1420 LET COL_COUNT = COLLISION(10)
1430 IF COL_COUNT = 0 THEN GOTO 1500
1440 FOR I = 1 TO COL_COUNT
1450 LET COL_SPRITE = COLLISION(10, I)
1460 IF COL_SPRITE >= 11 AND COL_SPRITE <= 14 THEN GOSUB 3000
1470 IF COL_SPRITE >= 15 AND COL_SPRITE <= 18 THEN GOSUB 3120
1480 NEXT I
1490 IF GAME_OVER = 1 THEN GOTO 1560
1500 WAIT 30
1510 IF GAME_OVER = 1 THEN GOTO 1560
1520 GOTO 1250
1530 REM Game over handler
1560 LOCATE 6, 1
1570 PRINT "GAME OVER! Score: "; SCORE
1580 LOCATE 7, 1
1590 PRINT "Press R to restart"
1600 LET KEY$ = INKEY$
1610 IF KEY$ = "r" OR KEY$ = "R" THEN GOTO 1640
1620 GOTO 1600
1630 REM Reset game
1640 LET SCORE = 0
1650 LET LIVES = 3
1660 LET GAME_OVER = 0
1670 LET P_X = 320
1680 LET P_Y = 240
1690 REM Reset ghost positions to starting locations
1700 LET E2_X = 100
1710 LET E2_Y = 100
1720 LET E2_DX = 3
1730 LET E2_DY = 2
1740 LET E2_ROT = 0
1750 LET E3_X = 540
1760 LET E3_Y = 100
1770 LET E3_DX = -3
1780 LET E3_DY = 3
1790 LET E3_ROT = 0
1800 LET E4_X = 100
1810 LET E4_Y = 380
1820 LET E4_DX = 3
1830 LET E4_DY = -2
1840 LET E4_ROT = 0
1850 LET E5_X = 540
1860 LET E5_Y = 380
1870 LET E5_DX = -3
1880 LET E5_DY = -3
1890 LET E5_ROT = 0
1891 REM Reset dot coordinate variables
1892 LET DOT_X(0) = 200 : LET DOT_Y(0) = 150
1893 LET DOT_X(1) = 440 : LET DOT_Y(1) = 150
1894 LET DOT_X(2) = 200 : LET DOT_Y(2) = 330
1895 LET DOT_X(3) = 440 : LET DOT_Y(3) = 330
1896 
1900 REM Reset sprite positions
1910 SPRITE UPDATE 10, 1, P_X, P_Y, 0, 1
1920 SPRITE UPDATE 11, 2, E2_X, E2_Y, 0, 1
1930 SPRITE UPDATE 12, 2, E3_X, E3_Y, 0, 1
1940 SPRITE UPDATE 13, 2, E4_X, E4_Y, 0, 1
1950 SPRITE UPDATE 14, 2, E5_X, E5_Y, 0, 1
1960 REM Clear status messages
1970 LOCATE 5, 1
1980 PRINT "                                                  "
1990 LOCATE 6, 1
2000 PRINT "                                                  "
2010 LOCATE 7, 1
2020 PRINT "                                                   "
2030 GOTO 1200
1760 
2000 REM Move ghost 11 with rotation
2010 LET E2_X = E2_X + E2_DX
2020 LET E2_Y = E2_Y + E2_DY
2030 IF E2_X <= 32 THEN LET E2_DX = -E2_DX
2040 IF E2_X <= 32 THEN LET E2_ROT = 45
2050 IF E2_X >= 608 THEN LET E2_DX = -E2_DX
2060 IF E2_X >= 608 THEN LET E2_ROT = 45
2070 IF E2_Y <= 32 THEN LET E2_DY = -E2_DY
2080 IF E2_Y <= 32 THEN LET E2_ROT = 45
2090 IF E2_Y >= 448 THEN LET E2_DY = -E2_DY
2100 IF E2_Y >= 448 THEN LET E2_ROT = 45
2110 IF E2_ROT > 1 THEN LET E2_ROT = E2_ROT * 0.9
2120 IF E2_ROT <= 1 THEN LET E2_ROT = 0
2130 SPRITE UPDATE 11, 2, E2_X, E2_Y, E2_ROT, 1
2140 RETURN
2150 
2200 REM Move ghost 12 with rotation
2210 LET E3_X = E3_X + E3_DX
2220 LET E3_Y = E3_Y + E3_DY
2230 IF E3_X <= 32 THEN LET E3_DX = -E3_DX
2240 IF E3_X <= 32 THEN LET E3_ROT = 45
2250 IF E3_X >= 608 THEN LET E3_DX = -E3_DX
2260 IF E3_X >= 608 THEN LET E3_ROT = 45
2270 IF E3_Y <= 32 THEN LET E3_DY = -E3_DY
2280 IF E3_Y <= 32 THEN LET E3_ROT = 45
2290 IF E3_Y >= 448 THEN LET E3_DY = -E3_DY
2300 IF E3_Y >= 448 THEN LET E3_ROT = 45
2310 IF E3_ROT > 1 THEN LET E3_ROT = E3_ROT * 0.9
2320 IF E3_ROT <= 1 THEN LET E3_ROT = 0
2330 SPRITE UPDATE 12, 2, E3_X, E3_Y, E3_ROT, 1
2340 RETURN
2350 
2400 REM Move ghost 13 with rotation
2410 LET E4_X = E4_X + E4_DX
2420 LET E4_Y = E4_Y + E4_DY
2430 IF E4_X <= 32 THEN LET E4_DX = -E4_DX
2440 IF E4_X <= 32 THEN LET E4_ROT = 45
2450 IF E4_X >= 608 THEN LET E4_DX = -E4_DX
2460 IF E4_X >= 608 THEN LET E4_ROT = 45
2470 IF E4_Y <= 32 THEN LET E4_DY = -E4_DY
2480 IF E4_Y <= 32 THEN LET E4_ROT = 45
2490 IF E4_Y >= 448 THEN LET E4_DY = -E4_DY
2500 IF E4_Y >= 448 THEN LET E4_ROT = 45
2510 IF E4_ROT > 1 THEN LET E4_ROT = E4_ROT * 0.9
2520 IF E4_ROT <= 1 THEN LET E4_ROT = 0
2530 SPRITE UPDATE 13, 2, E4_X, E4_Y, E4_ROT, 1
2540 RETURN
2550 
2600 REM Move ghost 14 with rotation
2610 LET E5_X = E5_X + E5_DX
2620 LET E5_Y = E5_Y + E5_DY
2630 IF E5_X <= 32 THEN LET E5_DX = -E5_DX
2640 IF E5_X <= 32 THEN LET E5_ROT = 45
2650 IF E5_X >= 608 THEN LET E5_DX = -E5_DX
2660 IF E5_X >= 608 THEN LET E5_ROT = 45
2670 IF E5_Y <= 32 THEN LET E5_DY = -E5_DY
2680 IF E5_Y <= 32 THEN LET E5_ROT = 45
2690 IF E5_Y >= 448 THEN LET E5_DY = -E5_DY
2700 IF E5_Y >= 448 THEN LET E5_ROT = 45
2710 IF E5_ROT > 1 THEN LET E5_ROT = E5_ROT * 0.9
2720 IF E5_ROT <= 1 THEN LET E5_ROT = 0
2730 SPRITE UPDATE 14, 2, E5_X, E5_Y, E5_ROT, 1
2740 RETURN
2750 
3000 REM Ghost collision
3010 LET LIVES = LIVES - 1
3020 LOCATE 5, 1
3030 PRINT "                                             "
3040 LOCATE 5, 1
3050 PRINT "EATEN! Lives: "; LIVES
3060 LET P_X = 320
3070 LET P_Y = 240
3080 IF LIVES <= 0 THEN LET GAME_OVER = 1
3090 WAIT 500
3100 RETURN
3110 
3120 REM Dot collision
3130 LET SCORE = SCORE + 100
3140 LOCATE 5, 1
3150 PRINT "                                           "
3160 LOCATE 5, 1
3170 PRINT "DOT! Score: "; SCORE
3180 LET NEW_X = RND(540) + 50
3190 LET NEW_Y = RND(380) + 50
3200 REM Calculate the index of the collected dot (0-3) from its sprite ID (15-18)
3210 LET DOT_IDX = COL_SPRITE - 15
3220 REM Update the dot's coordinates in the array. The main loop will handle the update.
3230 LET DOT_X(DOT_IDX) = NEW_X : LET DOT_Y(DOT_IDX) = NEW_Y
3240 RETURN

3250 END